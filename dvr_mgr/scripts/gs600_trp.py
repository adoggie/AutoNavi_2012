# -*- coding:utf-8 -*-#2012.2.3 scott   #转换 gs600行车记录仪 的轨迹 .dat到trp格式# 2012.2.8 scott #  影像与轨迹不同步，轨迹晚于视频开始时间，解决: 读取卡内 mov的创建时间和访问时间来判断mov开始和停止时间； #  轨迹自动补偿缺失的秒轨迹点#  在trp同级目录下记录 对应文件名的附属信息 file001.trp -> file001.attr#   file001.attr :   第一行unix timestamp 开始到结束#       12008788213-21321321321#		2011-01-12 12:12:10 - 2011-01-12 12:12:15#  # 看一下dat与mov是否创建时间一致#import sys,os,os.path,time,struct,traceback,threading,datetime,copyfromdir=''todir=''lasttick=0def front_pad(pps,st):	if not pps: #轨迹 [G]为空		return []	pp = pps[0]	lines =[]	lat,lon,ymdhms = pp[2],pp[3],pp[1]	tt = time.strptime(ymdhms,'%Y-%m-%d %H:%M:%S')	ymdhms = ymdhms.replace('-','').replace(' ','').replace(':','')		tick = time.mktime(tt)	tick = int(tick)	for t in range(st,tick):		tp = time.localtime(t)		tstr = "%04d%02d%02d%02d%02d%02d"%(tp.tm_year,tp.tm_mon,tp.tm_mday,tp.tm_hour,tp.tm_min,tp.tm_sec)					line  = "%.06f,%.06f,%s"%(lon,lat,tstr) 		lines.append( line)	return lines			#尾部填充	def tail_pad(pps,et):	if not pps:		return []	pp = pps[-1] #最后一个轨迹点	lines =[]	lat,lon,ymdhms = pp[2],pp[3],pp[1]	tt = time.strptime(ymdhms,'%Y-%m-%d %H:%M:%S')	ymdhms = ymdhms.replace('-','').replace(' ','').replace(':','')		tick = time.mktime(tt)	tick = int(tick)	for t in range(tick+1,et+1):		tp = time.localtime(t)		tstr = "%04d%02d%02d%02d%02d%02d"%(tp.tm_year,tp.tm_mon,tp.tm_mday,tp.tm_hour,tp.tm_min,tp.tm_sec)					line  = "%.06f,%.06f,%s"%(lon,lat,tstr) 		lines.append( line)	return linesdef encode_lines(lat,lon,ymdhms,speed=0,angle=0):	global lasttick	lines =[]	lat = float(lat[1:])*3600	lon = float(lon[1:])*3600		tt = time.strptime(ymdhms,'%Y-%m-%d %H:%M:%S')	ymdhms = ymdhms.replace('-','').replace(' ','').replace(':','')		tick = time.mktime(tt)	tick = int(tick)	if lasttick != 0 and tick - lasttick > 1: #两条记录时间过大,填补最近一次gps坐标		for t in range( lasttick+1,tick):			tp = time.localtime(t)			tstr = "%04d%02d%02d%02d%02d%02d"%(tp.tm_year,tp.tm_mon,tp.tm_mday,tp.tm_hour,tp.tm_min,tp.tm_sec)						line  = "%.06f,%.06f,%s"%(lon,lat,tstr) 			lines.append( line)				lasttick = tick		line = "%.06f,%.06f,%s"%(lon,lat,ymdhms)	lines.append(line)	return lines		def do_convert(gpsdir,outputdir=''):	'''		gpsdir - 轨迹数据目录		outputdir - 输出trp目录	'''	global lasttick	if not outputdir:		outputdir = gpsdir	files = os.listdir(gpsdir)	for file in files:		name,ext = os.path.splitext(file)		if ext.lower() != '.dat':			continue		#if name.upper() !='FILE0461':		#	continue				filename = gpsdir+"/"+file		fh = open(filename)		lines = fh.readlines()		fh.close()		print filename		#读取轨迹 .dat文件的起始时间		st = os.path.getctime(filename) #创建时间  		et = os.path.getmtime(filename) #最后修改时间		st,et = int(st),int(et)				#判别开始时间如果是缺省时间2011年则忽略此文件(gps未定位之前时间都是2011.1.1开始，这个时间视为非法)		tt = time.localtime(st)		if tt.tm_year == 2011:			print 'file %s create time is illegal,skipped!'%filename			continue		outfile = outputdir+"/"+name+".attr"		#写入时间信息		fh = open(outfile,'w')		fh.write("%s - %s\n"%(st,et) )		fh.close()				#开始解析gps轨迹		alls=[]		pps =[]		for line in lines:			line = line.strip()			pp = line.split('\t')						#print pp[0]			if pp[0] !='[G]':				continue			#print pp			if len(pp) !=6:				continue			pps.append(pp)				alls += front_pad( pps,st) #头差		for pp in pps:			#print line			lines = encode_lines(pp[2],pp[3],pp[1],pp[4],pp[5])			alls+=lines				alls += tail_pad(pps,et) #尾差				#写入trp文件,如果轨迹为空则不产生trp		outfile = outputdir+"/"+name+".trp"		print 'file %s is zero,skipping...'%filename		if alls:			f = open(outfile,'w')			for line in alls:				f.write( line +'\n')			f.close()		lasttick = 0		#				if __name__=='__main__':	if len(sys.argv) ==1:		print 'usage: gs600_trp.py gpsdir [trpdir]'	else:		do_convert(sys.argv[1])			